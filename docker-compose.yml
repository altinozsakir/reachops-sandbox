version: '3'
x-superset-image: &superset-image apache/superset:1.1.4
x-superset-depends-on: &superset-depends-on
  - postgres
  - redis
x-superset-volumes: &superset-volumes
  - /opt/superset/docker:/app/docker
  - /opt/superset:/app/superset_home

x-common-config:
  &common-config
  image: apache/ozone-runner:${OZONE_RUNNER_VERSION}
  volumes:
    - /opt/ozone/ozone-1.2.1:/opt/hadoop
  env_file:
    - /opt/ozone/ozone-1.2.1/compose/ozone/docker-config

x-layout_version:
  &metadata_layout
  OZONE-SITE.XML_ozone.om.metadata.layout: ${OZONE_OM_METADATA_LAYOUT:-SIMPLE}
  OZONE-SITE.XML_ozone.om.enable.filesystem.paths: "${OZONE_OM_ENABLE_FILESYSTEM_PATHS:-false}"

x-replication:
  &replication
  OZONE-SITE.XML_ozone.replication: ${OZONE_REPLICATION_FACTOR:-1}
services:
  trinodb:
    image: trinodb/trino:379
    container_name: coordinator
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./trino/etc:/etc/trino/
    links:
      - s3g

  reachops-hive-metastore:
    image: techneural/reachops-hive-metastore:0.0.1
    restart: always
    environment:
      METASTORE_DB: mysql
    entrypoint: /entrypoint.sh
    depends_on:
      - hive-repo-mysql
    expose:
      - 9083
    volumes:
      - ./reachops-hive-metastore/etc/metastore-site.xml:/opt/apache-hive-metastore/conf/metastore-site.xml
    links:
      - s3g

  hive-repo-mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_USER: reachops
      MYSQL_PASSWORD: reachops
      MYSQL_DATABASE: hive-repo
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./reachops-hive-metastore/data:/var/lib/mysql
    expose:
      - 3306
    ports:
      - 3306:3366
      
  datanode1:
    <<: *common-config
    ports:
      - 9864
      - 9882
    environment:
      <<: *replication
      <<: *metadata_layout
      OZONE_OPTS:
    volumes:
      - ./ozone/datanode1/data:/data
      - /opt/ozone/ozone-1.2.1:/opt/hadoop
    command: ["ozone","datanode"]
  datanode2:
    <<: *common-config
    ports:
      - 9864
      - 9882
    environment:
      <<: *replication
      <<: *metadata_layout
      OZONE_OPTS:
    volumes:
      - ./ozone/datanode2/data:/data
      - /opt/ozone/ozone-1.2.1:/opt/hadoop
    command: ["ozone","datanode"]
  datanode3:
    <<: *common-config
    ports:
      - 9864
      - 9882
    environment:
      <<: *replication
      <<: *metadata_layout
      OZONE_OPTS:
    volumes:
      - ./ozone/datanode3/data:/data
      - /opt/ozone/ozone-1.2.1:/opt/hadoop
    command: ["ozone","datanode"]
  om:
    <<: *common-config
    environment:
      ENSURE_OM_INITIALIZED: /data/metadata/om/current/VERSION
      OZONE_OPTS:
      <<: *replication
      <<: *metadata_layout
    ports:
      - 9874:9874
      - 9862:9862
    volumes:
      - ./ozone/om/data:/data
      - /opt/ozone/ozone-1.2.1:/opt/hadoop
    command: ["ozone","om"]
  scm:
    <<: *common-config
    ports:
      - 9876:9876
      - 9860:9860
    environment:
      ENSURE_SCM_INITIALIZED: /data/metadata/scm/current/VERSION
      OZONE-SITE.XML_hdds.scm.safemode.min.datanode: ${OZONE_SAFEMODE_MIN_DATANODES:-1}
      OZONE_OPTS:
      <<: *replication
      <<: *metadata_layout
    volumes:
      - ./ozone/scm/data:/data
      - /opt/ozone/ozone-1.2.1:/opt/hadoop
    command: ["ozone","scm"]
  s3g:
    <<: *common-config
    environment:
      OZONE_OPTS:
      <<: *replication
      <<: *metadata_layout
    ports:
      - 9878:9878
    volumes:
      - ./ozone/s3g/data:/data
      - /opt/ozone/ozone-1.2.1:/opt/hadoop
    command: ["ozone","s3g"]
  recon:
    <<: *common-config
    ports:
      - 9888:9888
    environment:
      OZONE_OPTS:
      <<: *replication
      <<: *metadata_layout
    volumes:
      - ./ozone/recon/data:/data
      - /opt/ozone/ozone-1.2.1:/opt/hadoop
    command: ["ozone","recon"]


  redis:
    image: redis:latest
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  postgres:
    env_file: docker/.env-non-dev
    image: postgres:10
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - ./superset/postgresdata:/var/lib/postgresql/data

  superset:
    env_file: docker/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
